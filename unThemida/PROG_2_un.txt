#################################################
--OP 0x507  Addr: 0x1103e818   	| 0xCBB/0x18FD    8b771935
VMR[52] = [ VMR[3D] ]

VMR[52] <=> VMR[11] (00 <=> FF8F0000)   (VMR[52] = FF8F0000  VMR[11] = 00)
#esp = VMR[3D] (6F8A8)

VMR[3D] += 04 (6F8A8 += 04) (6F8AC)

#esp = VMR[3D] (6F8AC)

VMR[11] = VMR[7A] (FF1F0000)                                (MOV ECX, EAX)

7A = EAX
11 = ECX
VMR[7A] <=> VMR[11] (FF1F0000 <=> FF1F0000)   (VMR[7A] = FF1F0000  VMR[11] = FF1F0000)

VMR[00] = VMR[7A] (FF1F0000)
VMR[00] += 01 (FF1F0000 += 01) (FF1F0001)
VMR[28] = VMR[00] (FF1F0001)                                (LEA ESI, [ECX + 1])


11 EAX
90 EBX
VMR[11] <=> VMR[90] (FF1F0000 <=> FF2F0000)   (VMR[11] = FF2F0000  VMR[90] = FF1F0000)

#esp = VMR[3D] (6F8AC)

VMR[90] = VMR[52] (FF8F0000) 52 EDI
VMR[28] = VMR[28] (FF1F0001) 28 ESI
VMR[41] = VMR[41] (FF3F0000) 41 EDX
VMR[52] = VMR[7A] (FF1F0000) 7A ECX
VMR[7A] = VMR[11] (FF2F0000) 11 ebx
VMR[11] = VMR[90] (FF1F0000) 90 eax




#0xD47/0x18FD    8800c089
b, VMR[41] = b, [VMR[52]] ([FF1F0000] --> 00)               (MOV DL, byte ptr[ECX]


VMR[52] += 01 (FF1F0000 += 01) (FF1F0001)                   (INC ECX)


VMR[75] = EFLAGS AND TEST VMR[41](00), VMR[41](00) (00)     (TEST DL,DL)


EFLAGS TEST VMR[75]   (04)
C0 P1 A0 Z0 S0 T0 I0 D0 O0
JNE/JNZ [ZF == 0]  to -48(EIP:D47)                          (JNE  D47)

VMR[52] -= VMR[28] (FF1F0001 -= FF1F0001) (00)              (SUB ECX, ESI)

#push VMR[7A] (FF2F0000)                                    (PUSH EBX)
#push VMR[52] (00)                                          (PUSH ECX)


#push VMR[11] (FF1F0000) -- RET
#push VMR[11] (FF1F0000) -- RET
#push VMR[75] (04)
#push VMR[11] (FF1F0000)
#push VMR[52] (00)
#push VMR[41] (FF3F0000)
#push VMR[7A] (FF2F0000)
#push VMR[82] (FF4F0000)
#push VMR[28] (FF1F0001)
#push VMR[90] (FF8F0000)


--OP 0x270  Addr: 0x1103ddbc   	| 0xDFC/0x18FD    7a005200
VMR[90] = VMR[90] (FF8F0000)  EDI
VMR[28] = VMR[28] (FF1F0001)  ESI
VMR[41] = VMR[41] (FF3F0000)  EDX
VMR[52] = VMR[52] (00)        ECX
VMR[7A] = VMR[7A] (FF2F0000)  EBX
VMR[11] = VMR[11] (FF1F0000)  EAX

#[esp+20h] = 10059BB0
#[esp+24h] = 11410E68
#pop EDI FF8F0000
#pop ESI FF1F0001
#pop EBP FF4F0000
#pop EBX FF2F0000
#pop EDX FF3F0000
#pop ECX 00
#pop EAX FF1F0000
#pop EFLAGS 04
;RET!  10059BB0

#FUN_10059bb0(00)                                           CALL FUN_10059bb0

#Jump to route E22


#0xE22/0x18FD    3d005100
#0xE26/0x18FD    cf013d00

VMR[90] = POP( FF8F0000 )
VMR[28] = POP( FF7F0000 )
VMR[82] = POP( FF6F0000 )
VMR[7A] = POP( FF4F0000 )
VMR[41] = POP( FF3F0000 )
VMR[52] = POP( FF2F0000 )
VMR[11] = POP( FF1F0000 )
VMR[75] = POP( FF0F0000 )

#0xE9D
VMR[3D] += 08 (6F8B0 += 08) (6F8B8)                         (ADD ESP,8)

#esp = VMR[3D] (6F8B8)

(PRE  11 EAX   90 EDI)
VMR[11] <=> VMR[90] (FF1F0000 <=> FF8F0000)   (VMR[11] = FF8F0000 EDI  VMR[90] = FF1F0000 EAX)

VMR[75] =  CMP  VMR[90], VMR[11] (FF1F0000, FF8F0000) (FF900000)         (CMP  EAX, EDI)

VMR[90] = VMR[11] (FF8F0000)  EDI
VMR[28] = VMR[28] (FF7F0000)  ESI
VMR[41] = VMR[41] (FF3F0000)  EDX
VMR[52] = VMR[52] (FF2F0000)  ECX
VMR[7A] = VMR[7A] (FF4F0000)  EBX
VMR[11] = VMR[90] (FF1F0000)  EAX

EFLAGS TEST VMR[75]   (FF0F0000)
C0 P0 A0 Z0 S0 T0 I0 D0 O0
JE/JZ [ZF == 1]  to +980(EIP:185B)                         (JE  185B)


VMR[00] = VMR[82] (FF6F0000)
VMR[00] += FFFFFFF0 (FF6F0000 += FFFFFFF0) (FF6EFFF0)
[ VMR[00] ] = VMR[90]                                      (MOV dword ptr[EBP - 0x10], EDI)

VMR[00] = VMR[82] (FF6F0000)
VMR[00] += FFFFFFEC (FF6F0000 += FFFFFFEC) (FF6EFFEC)
[ VMR[00] ] = VMR[90]                                      (MOV dword ptr[EBP - 0x14], EDI)

VMR[00] = VMR[82] (FF6F0000)
VMR[00] += FFFFFFF4 (FF6F0000 += FFFFFFF4) (FF6EFFF4)
[ VMR[00] ] = VMR[90]                                      (MOV dword ptr[EBP - 0xC], EDI)

VMR[00] = VMR[82] (FF6F0000)
VMR[00] += FFFFFFF8 (FF6F0000 += FFFFFFF8) (FF6EFFF8)
[ VMR[00] ] = VMR[90]                                      (MOV dword ptr[EBP - 8], EDI)

VMR[90] = VMR[11] (FF1F0000)                               (MOV EDI, EAX) ???

#push VMR[7A] (FF4F0000)                                   (PUSH EBX)


VMR[00] = VMR[82] (FF6F0000) (EBP)
VMR[00] += FFFFFFEC (FF6F0000 += FFFFFFEC) (FF6EFFEC)
VMR[11] = VMR[00] (FF6EFFEC)                               (LEA EAX, [EBP - 0x14])


#push VMR[11] (FF6EFFEC)
#push VMR[11] (FF6EFFEC)

#push VMR[75] (FF0F0000)
#push VMR[11] (FF6EFFEC)
#push VMR[52] (FF2F0000)
#push VMR[41] (FF3F0000)
#push VMR[7A] (FF4F0000)
#push VMR[82] (FF6F0000)
#push VMR[28] (FF7F0000)
#push VMR[90] (FF1F0000)

VMR[90] = VMR[90] (FF1F0000)
VMR[28] = VMR[28] (FF7F0000)
VMR[41] = VMR[41] (FF3F0000)
VMR[52] = VMR[52] (FF2F0000)
VMR[7A] = VMR[7A] (FF4F0000)
VMR[11] = VMR[11] (FF6EFFEC)


#[esp+20h] = 10051AA0
#[esp+24h] = 11410E77
#pop EDI FF1F0000
#pop ESI FF7F0000
#pop EBP FF6F0000
#pop EBX FF4F0000
#pop EDX FF3F0000
#pop ECX FF2F0000
#pop EAX FF6EFFEC
#pop EFLAGS FF0F0000
;RET!  10051AA0

#FUN_10051aa0											(CALL FUN_10051aa0)

#Jump to route 1036

#0x1036/0x18FD    3d005100
#0x103A/0x18FD    3c03ce4d

VMR[90] = POP( FF8F0000 )
VMR[52] = POP( FF7F0000 )
VMR[82] = POP( FF6F0000 )
VMR[7A] = POP( 6F8B0 )
VMR[7A] = POP( FF4F0000 )
VMR[41] = POP( FF3F0000 )
VMR[28] = POP( FF2F0000 )
VMR[11] = POP( FF1F0000 )
VMR[75] = POP( FF0F0000 ) 



--OP 0xAF  Addr: 0x1103d6b8   	| 0x1097/0x18FD    599d1100
VMR[04] = A20C10   (00 = A20C10)
VMR[04] += IMGBASE 10000000 (A20C10 += 10000000) (10A20C10)
#push VMR[04] (10A20C10)                                    (PUSH 0x10A20C10)

VMR[00] = VMR[82] (FF6F0000)
VMR[00] += FFFFFFEC (FF6F0000 += FFFFFFEC) (FF6EFFEC)
VMR[52] = VMR[00] (FF6EFFEC)                                (LEA ESI, [EBP - 0x14])


#push VMR[11] (FF1F0000)
#push VMR[11] (FF1F0000)
#push VMR[75] (FF0F0000)
#push VMR[11] (FF1F0000)
#push VMR[28] (FF2F0000)
#push VMR[41] (FF3F0000)
#push VMR[7A] (FF4F0000)
#push VMR[82] (FF6F0000)
#push VMR[52] (FF6EFFEC)
#push VMR[90] (FF8F0000)

VMR[90] = VMR[90] (FF8F0000)   EDI
VMR[28] = VMR[52] (FF6EFFEC)   ESI
VMR[41] = VMR[41] (FF3F0000)   EDX
VMR[52] = VMR[28] (FF2F0000)   ECX
VMR[7A] = VMR[7A] (FF4F0000)   EBX
VMR[11] = VMR[11] (FF1F0000)   EAX

#[esp+20h] = 10051E70
#[esp+24h] = 11410E86
#pop EDI FF8F0000
#pop ESI FF6EFFEC
#pop EBP FF6F0000
#pop EBX FF4F0000
#pop EDX FF3F0000
#pop ECX FF2F0000
#pop EAX FF1F0000
#pop EFLAGS FF0F0000
;RET!  10051E70

#FUN_10051e70									                   (CALL FUN_10051e70)

#Jump to route 1143

#0x1143/0x18FD    3d005100
#0x1147/0x18FD    3c03ce4d

VMR[90] = POP( FF8F0000 )
VMR[28] = POP( FF7F0000 )
VMR[82] = POP( FF6F0000 )
VMR[41] = POP( 6F8B0 )
VMR[7A] <=> VMR[41] (FF3F0000 <=> 6F8B0)   (VMR[7A] = 6F8B0  VMR[41] = FF3F0000)
VMR[7A] = POP( FF4F0000 )
VMR[11] <=> VMR[7A] (FF1F0000 <=> FF4F0000)   (VMR[11] = FF4F0000  VMR[7A] = FF1F0000)
VMR[41] = POP( FF3F0000 )
VMR[52] = POP( FF2F0000 )
VMR[7A] = POP( FF1F0000 )

VMR[75] = EFLAGS AND TEST VMR[7A](FF1F0000), VMR[7A](FF1F0000) (FF1F0000)  (TEST EAX, EAX)

(PRE 41 EDX   28  ESI)
VMR[41] <=> VMR[28] (FF3F0000 <=> FF7F0000)   (VMR[41] = FF7F0000 ESI  VMR[28] = FF3F0000  EDX)

VMR[90] = [ VMR[82] - C]                                                   (MOV EDI, dword ptr[EBP - 0xC])   

VMR[90] = VMR[90] (FF8F0000)    EDI
VMR[28] = VMR[41] (FF7F0000)    ESI
VMR[41] = VMR[28] (FF3F0000)    EDX
VMR[52] = VMR[52] (FF2F0000)    ECX
VMR[7A] = VMR[11] (FF4F0000)    EBX
VMR[11] = VMR[7A] (FF1F0000)    EAX

EFLAGS TEST VMR[75]   (FF0F0000)
C0 P0 A0 Z0 S0 T0 I0 D0 O0
JE/JZ [ZF == 1]  to +3C4(EIP:15B6)                                         (JE  15B6)

VMR[28] = [ VMR[82] - 14 ]                                                 (MOV ESI, dword ptr[EBP - 0x14])

VMR[52] ^= VMR[52] (FF2F0000 ^= FF2F0000) (00)                             (XOR ECX,ECX)

VMR[11] ^= VMR[11] (FF1F0000 ^= FF1F0000) (00)                             (XOR EAX,EAX)

VMR[75] = EFLAGS AND TEST VMR[28](FF8F0000), VMR[28](FF8F0000) (FF8F0000)     (TEST ESI,ESI)


VMR[90] = VMR[90] (FF8F0000)     edi
VMR[28] = VMR[28] (FF8F0000)     esi
VMR[41] = VMR[41] (FF3F0000)     edx
VMR[52] = VMR[52] (00)           ecx
VMR[7A] = VMR[7A] (FF4F0000)     ebx
VMR[11] = VMR[11] (00)           eax


EFLAGS TEST VMR[75]   (FF0F0000)
C0 P0 A0 Z0 S0 T0 I0 D0 O0
JE/JZ [ZF == 1]  to +B0(EIP:1305)                            (JE  1305)

b, VMR[11] = b, VMR[11] (00)        

VMR[90] = VMR[90] (FF8F0000)     edi
VMR[28] = VMR[28] (FF8F0000)     esi
VMR[41] = VMR[41] (FF3F0000)     edx
VMR[52] = VMR[52] (00)           ecx
VMR[7A] = VMR[7A] (FF4F0000)     ebx
VMR[11] = VMR[11] (00)           eax


#0x1282/0x18FD    a603186a

VMR[00] = VMR[90] (FF8F0000)  EDI
(PRE 41 EDX   11 EAX)
VMR[41] <=> VMR[11] (FF3F0000 <=> 00)   (VMR[41] = 00 EAX  VMR[11] = FF3F0000 EDX)
VMR[00] += VMR[41] (FF8F0000 += 00) (FF8F0000)  EAX
VMR[11] = [VMR[00]] ([FF8F0000] --> 00)                   (MOVZX EDX, byte ptr[EDI + EAX])


(PRE 52 ECX   28 ESI)
VMR[52] <=> VMR[28] (00 <=> FF8F0000)   (VMR[52] = FF8F0000 ESI  VMR[28] = 00 ECX)   
VMR[41] += 01 (00 += 01) (01)                                      (INC EAX)

VMR[28] += VMR[11] (00 += 00) (00)                                 (ADD ECX, EDX)


--OP 0x12F  Addr: 0x1103d8b8   	| 0x12B8/0x18FD    1100ebf7
VMR[75] = EFLAGS CMP TEST VMR[41](01), VMR[52](FF8F0000) (710001)  (CMP EAX,ESI)

VMR[90] = VMR[90] (FF8F0000)     90 edi
VMR[28] = VMR[52] (FF8F0000)     52 esi
VMR[41] = VMR[11] (00)           11 edx
VMR[52] = VMR[28] (00)           28 ecx
VMR[7A] = VMR[7A] (FF4F0000)     7A ebx
VMR[11] = VMR[41] (01)           41 eax


--OP 0x336  Addr: 0x1103e0d4   	| 0x12DE/0x18FD    51000000
EFLAGS TEST VMR[75]   (FF0F0000)
C0 P0 A0 Z0 S0 T0 I0 D0 O0
JL/JNGE [SF != OF]  to -5C(EIP:1282)                       JL  1282


#0x1305/0x18FD    82030a9c
(Pre 52 ECX  11 EAX)
VMR[11] <=> VMR[52] (01 <=> 00)   (VMR[11] = 00  VMR[52] = 01)  
(Pre 11 ECX  41 EDX)
VMR[41] <=> VMR[11] (00 <=> 00)   (VMR[41] = 00  VMR[11] = 00)  

VMR[75] = EFLAGS AND TEST b,VMR[41](00), b, VMR[41](00) (00)    (TEST CL,CL)


VMR[90] = VMR[90] (FF8F0000) edi (90)
VMR[28] = VMR[28] (FF8F0000) esi (28)
VMR[41] = VMR[11] (00)       edx (11)
VMR[52] = VMR[41] (00)       ecx (41)
VMR[7A] = VMR[7A] (FF4F0000) ebx (7A)
VMR[11] = VMR[52] (01)       eax (52)


EFLAGS TEST VMR[75]   (FF0F0000)
C0 P0 A0 Z0 S0 T0 I0 D0 O0
JNE/JNZ [ZF == 0]  to +281(EIP:15B6)  with next 51         (JNZ 15B6)



#push 400                                                  (PUSH 0x400)
#push 00                                                   (PUSH 0)
#push VMR[7A] (FF4F0000)                                   (PUSH EBX)




#push VMR[75] (FF0F0000)
#push VMR[11] (01)   eax
#push VMR[52] (00)   ecx
#push VMR[41] (00)   edx
#push VMR[7A] (FF4F0000)  ebx
#push VMR[82] (FF6F0000)  ebp
#push VMR[28] (FF8F0000)  esi
#push VMR[90] (FF8F0000)  edi

VMR[90] = VMR[90] (FF8F0000)
VMR[28] = VMR[28] (FF8F0000)
VMR[41] = VMR[41] (00)
VMR[52] = VMR[52] (00)
VMR[7A] = VMR[7A] (FF4F0000)
VMR[11] = VMR[11] (01)

#[esp+20h] = 1068CE80
#[esp+24h] = 11410E95
#pop EDI FF8F0000
#pop ESI FF8F0000
#pop EBP FF6F0000
#pop EBX FF4F0000
#pop EDX 00
#pop ECX 00
#pop EAX 01
#pop EFLAGS FF0F0000
;RET!  1068CE80

#memset                                                     (CALL memset)

#Jump to route 13D2

#13D2/0x18FD    3d005100

VMR[90] = POP( FF8F0000 )
VMR[7A] <=> VMR[41] (FF4F0000 <=> 00)   (VMR[7A] = 00  VMR[41] = FF4F0000)
VMR[28] = POP( FF7F0000 )
VMR[82] = POP( FF6F0000 )
VMR[7A] <=> VMR[52] (00 <=> 00)   (VMR[7A] = 00  VMR[52] = 00)
VMR[41] = POP( FF4F0000 )
VMR[52] = POP( FF3F0000 )
VMR[7A] = POP( FF2F0000 )
VMR[28] = POP( FF1F0000 )
VMR[75] = POP( FF0F0000 )

VMR[3D] += 0C (6F8B0 += 0C) (6F8BC)                         (ADD ESP,0xC)

#esp = VMR[3D] (6F8BC)


VMR[11] <=> VMR[90] (FF7F0000 <=> FF8F0000)   (VMR[11] = FF8F0000  VMR[90] = FF7F0000)
VMR[90] += FFFFFFFF (FF7F0000 += FFFFFFFF) (FF7EFFFF)       (DEC ESI)

#push VMR[90] (FF7EFFFF)                                    (PUSH ESI)
#push VMR[11] (FF8F0000)                                    (PUSH EDI)
#push VMR[41] (FF4F0000)                                    (PUSH EBX)

VMR[90] = VMR[11] (FF8F0000)
VMR[28] = VMR[90] (FF7EFFFF)
VMR[41] = VMR[52] (FF3F0000)
VMR[52] = VMR[7A] (FF2F0000)
VMR[7A] = VMR[41] (FF4F0000)
VMR[11] = VMR[28] (FF1F0000)

#[esp+20h] = 1068CE7A
#[esp+24h] = 11410EA4
#pop EDI FF8F0000
#pop ESI FF7EFFFF
#pop EBP FF6F0000
#pop EBX FF4F0000
#pop EDX FF3F0000
#pop ECX FF2F0000
#pop EAX FF1F0000
#pop EFLAGS FF0F0000
;RET!  1068CE7A

#memcpy                                                     (CALL memcpy)


#0x14DF/0x18FD    3d005100

VMR[90] = POP( FF8F0000 )
VMR[28] <=> VMR[41] (FF7EFFFF <=> FF3F0000)   (VMR[28] = FF3F0000  VMR[41] = FF7EFFFF)
VMR[41] = POP( FF7F0000 )
VMR[82] = POP( FF6F0000 )
VMR[11] <=> VMR[41] (FF1F0000 <=> FF7F0000)   (VMR[11] = FF7F0000  VMR[41] = FF1F0000)
VMR[7A] = POP( 6F8AC )
VMR[7A] = POP( FF4F0000 )
VMR[28] <=> VMR[28] (FF3F0000 <=> FF3F0000)   (VMR[28] = FF3F0000  VMR[28] = FF3F0000)
VMR[28] = POP( FF3F0000 )
VMR[41] <=> VMR[52] (FF1F0000 <=> FF2F0000)   (VMR[41] = FF2F0000  VMR[52] = FF1F0000)
VMR[41] = POP( FF2F0000 )
VMR[52] = POP( FF1F0000 )


VMR[3D] += 0C (6F8B4 += 0C) (6F8C0)                        ( ADD ESP,0xC )
#esp = VMR[3D] (6F8C0)

VMR[90] = VMR[90] (FF8F0000)
VMR[28] = VMR[11] (FF7F0000)
VMR[41] = VMR[28] (FF3F0000)
VMR[52] = VMR[41] (FF2F0000)
VMR[7A] = VMR[7A] (FF4F0000)
VMR[11] = VMR[52] (FF1F0000)

JMP to +61(EIP:15F5)  with next 51                        (JMP 15F5)



#0x15B6/0x18FD    a6030a6a

VMR[00] = VMR[82] (FF6F0000)
VMR[00] += 0B (FF6F0000 += 0B) (FF6F000B)

b, [VMR[00]] = 00 ([FF6F000B] = 00)                      (MOV byte ptr[EBP + 0xb], 0) (4)

#0x15F5

VMR[75] = EFLAGS AND TEST VMR[90], VMR[90] (FF8F0000)    (TEST EDI, EDI)

#push VMR[11] (FF1F0000)
#push VMR[75] (FF0F0000)
#push VMR[11] (FF1F0000)
#push VMR[52] (FF2F0000)
#push VMR[41] (FF3F0000)
#push VMR[7A] (FF4F0000)
#push VMR[82] (FF6F0000)
#push VMR[28] (FF7F0000)
#push VMR[90] (FF8F0000)


EFLAGS TEST VMR[75]   (FF0F0000)
C0 P0 A0 Z0 S0 T0 I0 D0 O0
JE/JZ [ZF == 1] TO:
	#STACK set [esp + 20] = 10059E79
	#pop EDI FF8F0000
	#pop ESI FF7F0000
	#pop EBP FF6F0000
	#pop EBX FF4F0000
	#pop EDX FF3F0000
	#pop ECX FF2F0000
	#pop EAX FF1F0000
	#pop EFLAGS FF0F0000
	;RET!  to 10059E79                                 JZ 10059E79


#push VMR[90] (FF8F0000)                               (push EDI)
VMR[3D] -= 4

VMR[00] = E70220
VMR[00] += IMGBASE 10000000 (E70220 += 10000000) (10E70220)

VMR[90] = VMR[90] (FF8F0000)
VMR[28] = VMR[28] (FF7F0000)
VMR[41] = VMR[41] (FF3F0000)
VMR[52] = VMR[52] (FF2F0000)
VMR[7A] = VMR[7A] (FF4F0000)
VMR[11] = VMR[11] (FF1F0000)

--OP 0x3BC  Addr: 0x1103e2ec   	| 0x1712/0x18FD    b30e4101
#[esp+20h] = [VMR00] ([10E70220]) (00)
#[esp+24h] = 11410EB3
#pop EDI FF8F0000
#pop ESI FF7F0000
#pop EBP FF6F0000
#pop EBX FF4F0000
#pop EDX FF3F0000
#pop ECX FF2F0000
#pop EAX FF1F0000
#pop EFLAGS FF0F0000
;RET!  00

#CALL [10E70220]                                      CALL dword ptr[0x10E70220]  (6)

#Jump to route 171A

#171A/0x18FD    3d005100
VMR[90] = POP( FF8F0000 )
VMR[90] <=> VMR[52] (FF8F0000 <=> FF2F0000)   (VMR[90] = FF2F0000  VMR[52] = FF8F0000)
VMR[28] = POP( FF7F0000 )
VMR[82] = POP( FF6F0000 )
VMR[7A] = POP( FF4F0000 )
VMR[41] = POP( FF3F0000 )
VMR[90] = POP( FF2F0000 )
VMR[52] <=> VMR[41] (FF8F0000 <=> FF3F0000)   (VMR[52] = FF3F0000  VMR[41] = FF8F0000)
VMR[11] = POP( FF1F0000 )
VMR[75] = POP( FF0F0000 )


VMR[28] <=> VMR[7A] (FF7F0000 <=> FF4F0000)   (VMR[28] = FF4F0000  VMR[7A] = FF7F0000)


VMR[3D] += 04 (6F8B8 += 04) (6F8BC)					   ( ADD ESP,4 )


#esp = VMR[3D] (6F8BC)

#push VMR[11] (FF1F0000)
#push VMR[90] (FF2F0000)
#push VMR[52] (FF3F0000)
#push VMR[28] (FF4F0000)
#push VMR[82] (FF6F0000)
#push VMR[7A] (FF7F0000)
#push VMR[41] (FF8F0000)

VMR[90] = VMR[41] (FF8F0000)
VMR[28] = VMR[7A] (FF7F0000)
VMR[41] = VMR[52] (FF3F0000)
VMR[52] = VMR[90] (FF2F0000)
VMR[7A] = VMR[28] (FF4F0000)
VMR[11] = VMR[11] (FF1F0000)

VMR[90] = VMR[90] (FF8F0000)
VMR[28] = VMR[28] (FF7F0000)
VMR[41] = VMR[41] (FF3F0000)
VMR[52] = VMR[52] (FF2F0000)
VMR[7A] = VMR[7A] (FF4F0000)
VMR[11] = VMR[11] (FF1F0000)





JMP  10059E79											JMP  10059E79



#185B/0x18FD    050306cd

VMR[00] = VMR[82] (FF6F0000)  (EBP)
VMR[00] += 0B (FF6F0000 += 0B) (FF6F000B)

VMR[28] <=> VMR[52] (FF7F0000 <=> FF2F0000)   (VMR[28] = FF2F0000  VMR[52] = FF7F0000)
VMR[11] <=> VMR[41] (FF1F0000 <=> FF3F0000)   (VMR[11] = FF3F0000  VMR[41] = FF1F0000)

b, [VMR[00]] = 00 ([FF6F000B] = 00)						(MOV byte ptr[EBP + 0xb], 0) (4)



#18D6
VMR[90] = VMR[90] (FF8F0000) edi
VMR[28] = VMR[52] (FF7F0000) esi
VMR[41] = VMR[11] (FF3F0000) edx
VMR[52] = VMR[28] (FF2F0000) ecx
VMR[7A] = VMR[7A] (FF4F0000) ebx
VMR[11] = VMR[41] (FF1F0000) eax


###10059e79

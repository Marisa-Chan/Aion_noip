Route 00
Route 2A4
Route 536
Route 8A8
Route A67
Route 704
Already parsed, BREAK!
Route 12A3
Route E17
Route 1424
Route 10C3
Already parsed, BREAK!
Route 16C4
Route 704
Already parsed, BREAK!
Route 25D4
Route 1ABB
Route 1E04
Route 2516
Already parsed, BREAK!
Route 211D
Route 23B5
Already parsed, BREAK!


#################################################


006ef4eb:  INIT 

006ef4ed:  STORE STACK 27
006ef4f1:  POP VM[16] = R8
006ef501:  POP VM[41] = R9
006ef50d:  POP VM[39] = R10
006ef519:  POP VM[141] = R11
006ef529:  POP VM[49] = R12
006ef535:  POP VM[e7] = R13
006ef541:  POP VM[b1] = R14
006ef54d:  POP VM[f1] = R15
006ef559:  POP VM[129] = RDI
006ef569:  POP VM[b9] = RSI
006ef575:  POP VM[51] = RBP
006ef585:  POP VM[d6] = RBX
006ef595:  POP VM[d6] = RBX
006ef5a5:  POP VM[61] = RDX
006ef5b5:  POP VM[11d] = RCX
006ef5c5:  POP VM[85] = RAX
006ef5d5:  POP VM[de] = EFLG
006ef5e1:  ADD RSP, 10
006ef5e6:  MOV R_1E, RBP
006ef5ee:  ADD R_1E, 12352023
006ef5fc:  MOV byte ptr [R_1E], 4c
006ef607:  MOV RAX, d9da1ce9
006ef60f:  PUSH RAX
006ef617:  MOV R_1E, RBP
006ef61f:  ADD R_1E, 12350685
006ef62d:  PUSH [R_1E]
006ef639:  MOV R_1E, RBP
006ef641:  ADD R_1E, 12352d9e
006ef64f:  PUSH RAX
006ef661:  PUSH RAX
006ef66d:  PUSH EFLG
006ef679:  PUSH RAX
006ef681:  PUSH RCX
006ef68d:  PUSH RDX
006ef699:  PUSH RBX
006ef6a5:  PUSH RBP
006ef6ad:  PUSH RSI
006ef6bf:  PUSH RDI
006ef6cb:  PUSH R15
006ef6dd:  PUSH R14
006ef6ef:  PUSH R13
006ef701:  PUSH R12
006ef713:  PUSH R11
006ef71f:  PUSH R10
006ef731:  PUSH R9
006ef739:  PUSH R8
006ef747:  UNSHFL
006ef769:  UNSHFL
006ef783:  CALL R_1E    RET  006f1d65
006ef78b:  INIT 

006ef78d:  STORE STACK 27
006ef791:  POP VM[16] = R8
006ef7a1:  POP VM[41] = R9
006ef7b1:  POP VM[39] = R10
006ef7bd:  POP VM[f1] = R11
006ef7c9:  POP VM[49] = R12
006ef7d9:  POP VM[e7] = R13
006ef7e5:  POP VM[b1] = R14
006ef7f5:  POP VM[141] = R15
006ef801:  POP VM[129] = RDI
006ef80d:  POP VM[b9] = RSI
006ef819:  POP VM[51] = RBP
006ef829:  POP VM[d6] = RBX
006ef839:  POP VM[d6] = RBX
006ef845:  POP VM[85] = RDX
006ef855:  POP VM[85] = RCX
006ef865:  POP VM[11d] = RAX
006ef871:  POP VM[de] = EFLG
006ef87d:  ADD RSP, 10
006ef882:  PUSH RAX
006ef88a:  MOV R_1E, RBP
006ef894:  ADD R_1E, 12560462
006ef8a2:  MOV RCX, R_1E
006ef8aa:  PUSH RSP
006ef8b2:  VMESP LOAD VM[27]
006ef8b6:  PUSH [RSP]
006ef8c0:  PUSH [RSP]
006ef8cc:  AND byte RSP, f0
006ef8db:  VMESP LOAD VM[27]
006ef8df:  ADD RSP, 10
006ef8f1:  VMESP LOAD VM[27]
006ef8f5:  SUB RSP, 20
006ef8ff:  VMESP LOAD VM[27]
006ef903:  PUSH RAX
006ef90f:  PUSH RAX
006ef91b:  PUSH EFLG
006ef927:  PUSH RAX
006ef92f:  PUSH RCX
006ef941:  PUSH RDX
006ef953:  PUSH RBX
006ef95f:  PUSH RBP
006ef96b:  PUSH RSI
006ef977:  PUSH RDI
006ef983:  PUSH R15
006ef98f:  PUSH R14
006ef99b:  PUSH R13
006ef9a7:  PUSH R12
006ef9af:  PUSH R11
006ef9b7:  PUSH R10
006ef9bf:  PUSH R9
006ef9cb:  PUSH R8
006ef9d9:  UNSHFL
006ef9fb:  UNSHFL
006efa15:  CALL RAX    RET  006f1d74
006efa1d:  INIT 

006efa1f:  STORE STACK 27
006efa23:  POP VM[16] = R8
006efa33:  POP VM[41] = R9
006efa43:  POP VM[39] = R10
006efa4f:  POP VM[141] = R11
006efa5f:  POP VM[41] = R12
006efa6f:  POP VM[e7] = R13
006efa7f:  POP VM[39] = R14
006efa8b:  POP VM[f1] = R15
006efa9b:  POP VM[129] = RDI
006efaa7:  POP VM[b9] = RSI
006efab7:  POP VM[51] = RBP
006efac7:  POP VM[d6] = RBX
006efad3:  POP VM[d6] = RBX
006efadf:  POP VM[85] = RDX
006efaef:  POP VM[11d] = RCX
006efaff:  POP VM[61] = RAX
006efb0f:  POP VM[de] = EFLG
006efb1f:  ADD RSP, 10
006efb24:  ADD RSP, 20
006efb36:  VMESP LOAD VM[27]
006efb3a:  POP RSP? (27)
006efb4a:  VMESP LOAD VM[27]
006efb4e:  TEST RAX, RAX
006efb56:  UNSHFL
006efb78:  UNSHFL
006efb92:  JNE/JNZ [ZF == 0] 6efd8f
006efb9f:  POP RAX? (61)
006efbaf:  UNSHFL
006efbd1:  UNSHFL
006efbeb:  INIT 

006efbed:  MOV RAX, 00
006efbfd:  MOV R_1E, RBP
006efc05:  ADD R_1E, 12353034
006efc0d:  PUSH RAX
006efc15:  PUSH EFLG
006efc21:  PUSH RAX
006efc29:  PUSH RCX
006efc31:  PUSH RDX
006efc39:  PUSH RBX
006efc45:  PUSH RBP
006efc51:  PUSH RSI
006efc59:  PUSH RDI
006efc6b:  PUSH R15
006efc77:  PUSH R14
006efc89:  PUSH R13
006efc95:  PUSH R12
006efc9d:  PUSH R11
006efcaf:  PUSH R10
006efcb7:  PUSH R9
006efcc9:  PUSH R8
006efcd7:  UNSHFL
006efcf9:  UNSHFL
006efd1b:  UNSHFL
006efd35:  UNSHFL
006efd4f:  JMP OUT R_1E 
006efd8f:  INIT 

006efd91:  MOV R_1E, RBP
006efd9b:  ADD R_1E, 12352fbc
006efda3:  MOV [R_1E], RAX
006efdb1:  POP RAX? (61)
006efdc1:  MOV R_1E, RBP
006efdcb:  ADD R_1E, 1256046d
006efdd3:  MOV RCX, R_1E
006efddd:  PUSH RSP
006efde9:  VMESP LOAD VM[27]
006efded:  PUSH [RSP]
006efdfb:  PUSH [RSP]
006efe05:  AND byte RSP, f0
006efe14:  VMESP LOAD VM[27]
006efe18:  ADD RSP, 10
006efe20:  VMESP LOAD VM[27]
006efe24:  SUB RSP, 20
006efe2e:  VMESP LOAD VM[27]
006efe32:  PUSH RAX
006efe44:  PUSH RAX
006efe4c:  PUSH EFLG
006efe58:  PUSH RAX
006efe64:  PUSH RCX
006efe6c:  PUSH RDX
006efe78:  PUSH RBX
006efe8a:  PUSH RBP
006efe96:  PUSH RSI
006efea2:  PUSH RDI
006efeae:  PUSH R15
006efeba:  PUSH R14
006efec6:  PUSH R13
006efece:  PUSH R12
006efed6:  PUSH R11
006efee2:  PUSH R10
006efeee:  PUSH R9
006eff00:  PUSH R8
006eff0a:  UNSHFL
006eff2c:  UNSHFL
006eff46:  CALL RAX    RET  006f1d83
006eff4e:  INIT 

006eff50:  STORE STACK 27
006eff54:  POP VM[16] = R8
006eff64:  POP VM[41] = R9
006eff74:  POP VM[39] = R10
006eff84:  POP VM[141] = R11
006eff94:  POP VM[16] = R12
006effa4:  POP VM[e7] = R13
006effb4:  POP VM[b1] = R14
006effc4:  POP VM[f1] = R15
006effd4:  POP VM[129] = RDI
006effe4:  POP VM[d6] = RSI
006efff4:  POP VM[51] = RBP
006f0000:  POP VM[11d] = RBX
006f000c:  POP VM[11d] = RBX
006f0018:  POP VM[85] = RDX
006f0024:  POP VM[61] = RCX
006f0030:  POP VM[b9] = RAX
006f0040:  POP VM[de] = EFLG
006f004c:  ADD RSP, 10
006f0051:  ADD RSP, 20
006f0063:  VMESP LOAD VM[27]
006f0067:  POP RSP? (27)
006f0077:  VMESP LOAD VM[27]
006f007b:  TEST RAX, RAX
006f0083:  UNSHFL
006f00a5:  UNSHFL
006f00bf:  JE/JZ [ZF == 1] 6efbeb
006f00cc:  MOV R_1E, RBP
006f00d4:  ADD R_1E, 123519bc
006f00dc:  MOV [R_1E], RAX
006f00e2:  MOV R_1E, RBP
006f00ea:  ADD R_1E, 12350381
006f00f8:  CMP dword [R_1E], 01
006f0108:  UNSHFL
006f012a:  UNSHFL
006f0144:  JNE/JNZ [ZF == 0] 6f078a
006f0151:  MOV R_1E, RBP
006f0159:  ADD R_1E, 12352023
006f0167:  MOV byte ptr [R_1E], 4c
006f0172:  MOV RAX, d9da1ce9
006f0182:  PUSH RAX
006f018e:  MOV R_1E, RBP
006f0196:  ADD R_1E, 12350685
006f019e:  PUSH [R_1E]
006f01aa:  MOV R_1E, RBP
006f01b2:  ADD R_1E, 12352d9e
006f01ba:  PUSH RAX
006f01c6:  PUSH RAX
006f01d8:  PUSH EFLG
006f01e4:  PUSH RAX
006f01f6:  PUSH RCX
006f0208:  PUSH RDX
006f0214:  PUSH RBX
006f0220:  PUSH RBP
006f0232:  PUSH RSI
006f023e:  PUSH RDI
006f024a:  PUSH R15
006f025c:  PUSH R14
006f0268:  PUSH R13
006f027a:  PUSH R12
006f0286:  PUSH R11
006f028e:  PUSH R10
006f029a:  PUSH R9
006f02ac:  PUSH R8
006f02ba:  UNSHFL
006f02dc:  UNSHFL
006f02f6:  CALL R_1E    RET  006f1d92
006f02fe:  INIT 

006f0300:  STORE STACK 27
006f0304:  POP VM[16] = R8
006f0310:  POP VM[41] = R9
006f0320:  POP VM[39] = R10
006f0330:  POP VM[141] = R11
006f0340:  POP VM[49] = R12
006f034c:  POP VM[e7] = R13
006f0358:  POP VM[b1] = R14
006f0364:  POP VM[f1] = R15
006f0374:  POP VM[85] = RDI
006f0384:  POP VM[b9] = RSI
006f0394:  POP VM[51] = RBP
006f03a4:  POP VM[b9] = RBX
006f03b4:  POP VM[b9] = RBX
006f03c0:  POP VM[129] = RDX
006f03cc:  POP VM[d6] = RCX
006f03d8:  POP VM[d6] = RAX
006f03e8:  POP VM[de] = EFLG
006f03f8:  ADD RSP, 10
006f03fd:  MOV R_1E, RBP
006f0405:  ADD R_1E, 1256047a
006f040d:  MOV RCX, R_1E
006f0415:  PUSH RSP
006f0421:  VMESP LOAD VM[27]
006f0425:  PUSH [RSP]
006f0431:  PUSH [RSP]
006f043f:  AND byte RSP, f0
006f044a:  VMESP LOAD VM[27]
006f044e:  ADD RSP, 10
006f0460:  VMESP LOAD VM[27]
006f0464:  SUB RSP, 20
006f046e:  VMESP LOAD VM[27]
006f0472:  PUSH RAX
006f047e:  PUSH RAX
006f0490:  PUSH EFLG
006f049e:  PUSH RAX
006f04a6:  PUSH RCX
006f04ae:  PUSH RDX
006f04ba:  PUSH RBX
006f04cc:  PUSH RBP
006f04d8:  PUSH RSI
006f04e4:  PUSH RDI
006f04f6:  PUSH R15
006f04fe:  PUSH R14
006f0510:  PUSH R13
006f0522:  PUSH R12
006f052e:  PUSH R11
006f053a:  PUSH R10
006f054c:  PUSH R9
006f0558:  PUSH R8
006f0566:  UNSHFL
006f0588:  UNSHFL
006f05a2:  CALL RAX    RET  006f1da1
006f05aa:  INIT 

006f05ac:  STORE STACK 27
006f05b0:  POP VM[16] = R8
006f05bc:  POP VM[41] = R9
006f05cc:  POP VM[39] = R10
006f05dc:  POP VM[141] = R11
006f05ec:  POP VM[49] = R12
006f05fc:  POP VM[e7] = R13
006f060c:  POP VM[b1] = R14
006f061c:  POP VM[f1] = R15
006f062c:  POP VM[b9] = RDI
006f063c:  POP VM[11d] = RSI
006f064c:  POP VM[51] = RBP
006f065c:  POP VM[d6] = RBX
006f066c:  POP VM[d6] = RBX
006f067c:  POP VM[85] = RDX
006f068c:  POP VM[129] = RCX
006f069c:  POP VM[61] = RAX
006f06ac:  POP VM[de] = EFLG
006f06bc:  ADD RSP, 10
006f06c1:  ADD RSP, 20
006f06d3:  VMESP LOAD VM[27]
006f06d7:  POP RSP? (27)
006f06e3:  VMESP LOAD VM[27]
006f06e7:  TEST RAX, RAX
006f06ef:  UNSHFL
006f0711:  UNSHFL
006f072b:  JE/JZ [ZF == 1] 6efbeb
006f0738:  MOV R_1E, RBP
006f0740:  ADD R_1E, 12353015
006f0748:  MOV [R_1E], RAX
006f074e:  UNSHFL
006f0770:  UNSHFL
006f078a:  INIT 

006f078c:  MOV R_1E, RBP
006f0796:  ADD R_1E, 12352023
006f079e:  MOV byte ptr [R_1E], 47
006f07ab:  MOV RAX, a817731a
006f07b3:  PUSH RAX
006f07bf:  MOV R_1E, RBP
006f07c7:  ADD R_1E, 12350685
006f07d5:  PUSH [R_1E]
006f07e1:  MOV R_1E, RBP
006f07eb:  ADD R_1E, 12352d9e
006f07f9:  PUSH RAX
006f0805:  PUSH RAX
006f0811:  PUSH EFLG
006f081d:  PUSH RAX
006f0829:  PUSH RCX
006f0835:  PUSH RDX
006f083d:  PUSH RBX
006f0849:  PUSH RBP
006f085b:  PUSH RSI
006f0867:  PUSH RDI
006f0879:  PUSH R15
006f0881:  PUSH R14
006f0889:  PUSH R13
006f0891:  PUSH R12
006f089d:  PUSH R11
006f08a9:  PUSH R10
006f08b5:  PUSH R9
006f08bd:  PUSH R8
006f08c7:  UNSHFL
006f08e9:  UNSHFL
006f0903:  CALL R_1E    RET  006f1db0
006f090b:  INIT 

006f090d:  STORE STACK 27
006f0911:  POP VM[16] = R8
006f0921:  POP VM[41] = R9
006f0931:  POP VM[39] = R10
006f093d:  POP VM[49] = R11
006f094d:  POP VM[b1] = R12
006f095d:  POP VM[e7] = R13
006f096d:  POP VM[141] = R14
006f097d:  POP VM[16] = R15
006f098d:  POP VM[129] = RDI
006f099d:  POP VM[11d] = RSI
006f09a9:  POP VM[51] = RBP
006f09b5:  POP VM[b9] = RBX
006f09c1:  POP VM[b9] = RBX
006f09cd:  POP VM[61] = RDX
006f09dd:  POP VM[d6] = RCX
006f09ed:  POP VM[85] = RAX
006f09fd:  POP VM[de] = EFLG
006f0a0d:  ADD RSP, 10
006f0a12:  MOV R_1E, RBP
006f0a1a:  ADD R_1E, 12560484
006f0a28:  MOV RCX, R_1E
006f0a32:  PUSH RSP
006f0a3a:  VMESP LOAD VM[27]
006f0a3e:  PUSH [RSP]
006f0a48:  PUSH [RSP]
006f0a54:  AND byte RSP, f0
006f0a69:  VMESP LOAD VM[27]
006f0a6d:  ADD RSP, 10
006f0a7f:  VMESP LOAD VM[27]
006f0a83:  SUB RSP, 20
006f0a8d:  VMESP LOAD VM[27]
006f0a91:  PUSH RAX
006f0a99:  PUSH RAX
006f0aa5:  PUSH EFLG
006f0ab3:  PUSH RAX
006f0abf:  PUSH RCX
006f0acb:  PUSH RDX
006f0ad3:  PUSH RBX
006f0adf:  PUSH RBP
006f0aeb:  PUSH RSI
006f0af3:  PUSH RDI
006f0b05:  PUSH R15
006f0b0d:  PUSH R14
006f0b1f:  PUSH R13
006f0b2b:  PUSH R12
006f0b33:  PUSH R11
006f0b45:  PUSH R10
006f0b4d:  PUSH R9
006f0b59:  PUSH R8
006f0b67:  UNSHFL
006f0b89:  UNSHFL
006f0ba3:  CALL RAX    RET  006f1dbf
006f0bab:  INIT 

006f0bad:  STORE STACK 27
006f0bb1:  POP VM[16] = R8
006f0bbd:  POP VM[41] = R9
006f0bcd:  POP VM[39] = R10
006f0bdd:  POP VM[141] = R11
006f0bed:  POP VM[49] = R12
006f0bf9:  POP VM[e7] = R13
006f0c09:  POP VM[b1] = R14
006f0c19:  POP VM[f1] = R15
006f0c29:  POP VM[129] = RDI
006f0c39:  POP VM[b9] = RSI
006f0c45:  POP VM[51] = RBP
006f0c51:  POP VM[d6] = RBX
006f0c61:  POP VM[d6] = RBX
006f0c6d:  POP VM[85] = RDX
006f0c79:  POP VM[11d] = RCX
006f0c85:  POP VM[61] = RAX
006f0c95:  POP VM[de] = EFLG
006f0ca1:  ADD RSP, 10
006f0ca6:  ADD RSP, 20
006f0cb8:  VMESP LOAD VM[27]
006f0cbc:  POP RSP? (27)
006f0cc8:  VMESP LOAD VM[27]
006f0ccc:  MOV R_1E, RBP
006f0cd4:  ADD R_1E, 12560484
006f0ce2:  MOV RAX, R_1E
006f0cea:  MOV R_1E, RAX
006f0cf4:  ADD R_1E, 0e
006f0cfc:  MOV RBX, word [R_1E]
006f0d02:  MOV R_1E, RAX
006f0d0c:  ADD R_1E, 0c
006f0d1a:  MOV RAX, word [R_1E]
006f0d2a:  SHL RAX, dword RAX, 10
006f0d31:  OR RAX, dword RAX, dword RBX
006f0d3f:  SHL RBX, dword RBX, 10
006f0d46:  ADD RBX, dword RBX, dword RCX
006f0d4e:  ADD RAX, dword RAX, b8736746
006f0d58:  XOR RAX, dword RAX, dword RBX
006f0d68:  MOV R_1E, RBP
006f0d72:  ADD R_1E, 1235211d
006f0d80:  MOV dword [R_1E], RAX
006f0d8a:  MOV RAX, 00
006f0d9a:  TEST dword RAX, dword RAX
006f0da6:  UNSHFL
006f0dc8:  UNSHFL
006f0de2:  JE/JZ [ZF == 1] 6f1abb
006f0def:  MOV R_1E, RBP
006f0df7:  ADD R_1E, 12352023
006f0e05:  MOV byte ptr [R_1E], 47
006f0e12:  MOV RAX, d49aa7d2
006f0e1a:  PUSH RAX
006f0e26:  MOV R_1E, RBP
006f0e30:  ADD R_1E, 12350685
006f0e3e:  PUSH [R_1E]
006f0e48:  MOV R_1E, RBP
006f0e52:  ADD R_1E, 12352d9e
006f0e60:  PUSH RAX
006f0e72:  PUSH RAX
006f0e7e:  PUSH EFLG
006f0e8c:  PUSH RAX
006f0e98:  PUSH RCX
006f0ea4:  PUSH RDX
006f0eb6:  PUSH RBX
006f0ec8:  PUSH RBP
006f0ed4:  PUSH RSI
006f0ee0:  PUSH RDI
006f0ef2:  PUSH R15
006f0f04:  PUSH R14
006f0f10:  PUSH R13
006f0f22:  PUSH R12
006f0f2e:  PUSH R11
006f0f36:  PUSH R10
006f0f3e:  PUSH R9
006f0f50:  PUSH R8
006f0f5e:  UNSHFL
006f0f80:  UNSHFL
006f0f9a:  CALL R_1E    RET  006f1dce
006f0fa2:  INIT 

006f0fa4:  STORE STACK 27
006f0fa8:  POP VM[16] = R8
006f0fb8:  POP VM[41] = R9
006f0fc8:  POP VM[39] = R10
006f0fd8:  POP VM[141] = R11
006f0fe8:  POP VM[49] = R12
006f0ff8:  POP VM[e7] = R13
006f1008:  POP VM[b1] = R14
006f1018:  POP VM[41] = R15
006f1028:  POP VM[b9] = RDI
006f1038:  POP VM[61] = RSI
006f1048:  POP VM[51] = RBP
006f1058:  POP VM[61] = RBX
006f1064:  POP VM[61] = RBX
006f1070:  POP VM[11d] = RDX
006f1080:  POP VM[85] = RCX
006f1090:  POP VM[129] = RAX
006f10a0:  POP VM[de] = EFLG
006f10ac:  ADD RSP, 10
006f10b1:  MOV RBX, RAX
006f10bb:  MOV R_1E, RBP
006f10c5:  ADD R_1E, 12560494
006f10cd:  MOV RSI, R_1E
006f10d5:  MOV dword RSI, 41544350
006f10e7:  MOV R_1E, RSI
006f10f1:  ADD R_1E, 04
006f10f9:  MOV dword R_1E, 6f6f4856
006f110b:  MOV R_1E, RSI
006f1113:  ADD R_1E, 08
006f111b:  MOV dword [R_1E], 6c642e6b
006f1129:  MOV R_1E, RSI
006f1133:  ADD R_1E, 0c
006f113b:  MOV byte ptr [R_1E], 6c
006f1146:  PUSH RSP
006f1158:  VMESP LOAD VM[27]
006f115c:  PUSH [RSP]
006f1166:  PUSH [RSP]
006f1172:  AND byte RSP, f0
006f1185:  VMESP LOAD VM[27]
006f1189:  ADD RSP, 1590010
006f1191:  VMESP LOAD VM[27]
006f1195:  SUB RSP, e4b70020
006f119f:  VMESP LOAD VM[27]
006f11a3:  MOV RCX, RSI
006f11ab:  PUSH RAX
006f11b7:  PUSH RAX
006f11c9:  PUSH EFLG
006f11d7:  PUSH RAX
006f11e3:  PUSH RCX
006f11eb:  PUSH RDX
006f11f7:  PUSH RBX
006f1203:  PUSH RBP
006f120f:  PUSH RSI
006f121b:  PUSH RDI
006f122d:  PUSH R15
006f1239:  PUSH R14
006f124b:  PUSH R13
006f125d:  PUSH R12
006f126f:  PUSH R11
006f1281:  PUSH R10
006f128d:  PUSH R9
006f1299:  PUSH R8
006f12a7:  UNSHFL
006f12c9:  UNSHFL
006f12e3:  CALL RBX    RET  006f1ddd
006f12eb:  INIT 

006f12ed:  STORE STACK 27
006f12f1:  POP VM[16] = R8
006f12fd:  POP VM[41] = R9
006f130d:  POP VM[39] = R10
006f131d:  POP VM[49] = R11
006f132d:  POP VM[141] = R12
006f133d:  POP VM[e7] = R13
006f134d:  POP VM[b1] = R14
006f135d:  POP VM[f1] = R15
006f136d:  POP VM[85] = RDI
006f137d:  POP VM[b9] = RSI
006f138d:  POP VM[51] = RBP
006f139d:  POP VM[d6] = RBX
006f13a9:  POP VM[d6] = RBX
006f13b9:  POP VM[11d] = RDX
006f13c5:  POP VM[61] = RCX
006f13d1:  POP VM[85] = RAX
006f13e1:  POP VM[de] = EFLG
006f13ed:  ADD RSP, 10
006f13f2:  ADD RSP, 20
006f1404:  VMESP LOAD VM[27]
006f1408:  POP RSP? (27)
006f1418:  VMESP LOAD VM[27]
006f141c:  TEST RAX, RAX
006f142c:  UNSHFL
006f144e:  UNSHFL
006f1468:  JE/JZ [ZF == 1] 6f19fd
006f1475:  PUSH RAX
006f1481:  MOV R_1E, RBP
006f1489:  ADD R_1E, 12352023
006f1491:  MOV byte ptr [R_1E], 46
006f149c:  MOV RAX, bade0614
006f14a4:  PUSH RAX
006f14ac:  MOV R_1E, RBP
006f14b4:  ADD R_1E, 12350685
006f14bc:  PUSH [R_1E]
006f14c8:  MOV R_1E, RBP
006f14d2:  ADD R_1E, 12352d9e
006f14e0:  PUSH RAX
006f14e8:  PUSH RAX
006f14f4:  PUSH EFLG
006f1502:  PUSH RAX
006f150a:  PUSH RCX
006f151c:  PUSH RDX
006f152e:  PUSH RBX
006f153a:  PUSH RBP
006f1546:  PUSH RSI
006f154e:  PUSH RDI
006f155a:  PUSH R15
006f1566:  PUSH R14
006f156e:  PUSH R13
006f1576:  PUSH R12
006f1588:  PUSH R11
006f159a:  PUSH R10
006f15a6:  PUSH R9
006f15b2:  PUSH R8
006f15c0:  UNSHFL
006f15e2:  UNSHFL
006f15fc:  CALL R_1E    RET  006f1dec
006f1604:  INIT 

006f1606:  STORE STACK 27
006f160a:  POP VM[16] = R8
006f1616:  POP VM[41] = R9
006f1622:  POP VM[39] = R10
006f1632:  POP VM[141] = R11
006f163e:  POP VM[49] = R12
006f164e:  POP VM[e7] = R13
006f165e:  POP VM[b1] = R14
006f166a:  POP VM[39] = R15
006f167a:  POP VM[85] = RDI
006f168a:  POP VM[b9] = RSI
006f1696:  POP VM[51] = RBP
006f16a2:  POP VM[d6] = RBX
006f16b2:  POP VM[d6] = RBX
006f16c2:  POP VM[129] = RDX
006f16d2:  POP VM[11d] = RCX
006f16de:  POP VM[61] = RAX
006f16ee:  POP VM[de] = EFLG
006f16fe:  ADD RSP, 10
006f1703:  MOV RBX, RAX
006f170b:  POP RAX? (61)
006f1717:  PUSH RSP
006f1729:  VMESP LOAD VM[27]
006f172d:  PUSH [RSP]
006f173b:  PUSH [RSP]
006f1747:  AND byte RSP, f0
006f1750:  VMESP LOAD VM[27]
006f1754:  ADD RSP, 10
006f1766:  VMESP LOAD VM[27]
006f176a:  SUB RSP, 20
006f1774:  VMESP LOAD VM[27]
006f1778:  MOV RCX, RAX
006f1782:  PUSH RAX
006f178a:  PUSH RAX
006f1792:  PUSH EFLG
006f179e:  PUSH RAX
006f17a6:  PUSH RCX
006f17b2:  PUSH RDX
006f17ba:  PUSH RBX
006f17c6:  PUSH RBP
006f17ce:  PUSH RSI
006f17e0:  PUSH RDI
006f17e8:  PUSH R15
006f17fa:  PUSH R14
006f1806:  PUSH R13
006f1812:  PUSH R12
006f1824:  PUSH R11
006f182c:  PUSH R10
006f183e:  PUSH R9
006f184a:  PUSH R8
006f1858:  UNSHFL
006f187a:  UNSHFL
006f1894:  CALL RBX    RET  006f1dfb
006f189c:  INIT 

006f189e:  STORE STACK 27
006f18a2:  POP VM[16] = R8
006f18b2:  POP VM[41] = R9
006f18be:  POP VM[39] = R10
006f18ce:  POP VM[49] = R11
006f18da:  POP VM[141] = R12
006f18ea:  POP VM[e7] = R13
006f18fa:  POP VM[b1] = R14
006f190a:  POP VM[f1] = R15
006f191a:  POP VM[129] = RDI
006f1926:  POP VM[b9] = RSI
006f1932:  POP VM[51] = RBP
006f1942:  POP VM[d6] = RBX
006f194e:  POP VM[d6] = RBX
006f195e:  POP VM[85] = RDX
006f196a:  POP VM[11d] = RCX
006f197a:  POP VM[61] = RAX
006f1986:  POP VM[de] = EFLG
006f1996:  ADD RSP, 10
006f199b:  ADD RSP, 20
006f19ad:  VMESP LOAD VM[27]
006f19b1:  POP RSP? (27)
006f19bd:  VMESP LOAD VM[27]
006f19c1:  UNSHFL
006f19e3:  UNSHFL
006f19fd:  INIT 

006f19ff:  MOV R_1E, RBP
006f1a07:  ADD R_1E, 12560494
006f1a0f:  MOV RSI, R_1E
006f1a17:  MOV dword RSI, 00
006f1a29:  MOV R_1E, RSI
006f1a33:  ADD R_1E, 04
006f1a41:  MOV dword R_1E, 00
006f1a53:  MOV R_1E, RSI
006f1a5d:  ADD R_1E, 08
006f1a6b:  MOV dword [R_1E], 00
006f1a7f:  UNSHFL
006f1aa1:  UNSHFL
006f1abb:  INIT 

006f1abd:  MOV R_1E, RBP
006f1ac5:  ADD R_1E, 1256045e
006f1ad3:  MOV RAX, dword [R_1E]
006f1ad9:  XOR RAX, dword RAX, 3d469d0d
006f1ae5:  ADD RAX, RBP
006f1af1:  PUSH RAX
006f1afd:  PUSH EFLG
006f1b09:  PUSH RAX
006f1b15:  PUSH RCX
006f1b1d:  PUSH RDX
006f1b25:  PUSH RBX
006f1b2d:  PUSH RBP
006f1b39:  PUSH RSI
006f1b45:  PUSH RDI
006f1b57:  PUSH R15
006f1b69:  PUSH R14
006f1b75:  PUSH R13
006f1b87:  PUSH R12
006f1b93:  PUSH R11
006f1b9b:  PUSH R10
006f1ba7:  PUSH R9
006f1bb3:  PUSH R8
006f1bc1:  UNSHFL
006f1be3:  UNSHFL
006f1c05:  UNSHFL
006f1c1f:  UNSHFL
006f1c39:  JMP OUT RAX 
